// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Data.Models;

namespace Data.Data
{
    public partial class hopeupermanDbContext : DbContext
    {
        public hopeupermanDbContext()
        {
        }

        public hopeupermanDbContext(DbContextOptions<hopeupermanDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AdminData> AdminData { get; set; }
        public virtual DbSet<MapMarkers> MapMarkers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if(!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Server = tcp:hopeuperman.database.windows.net, 1433; Initial Catalog = hopeupermanDb; Persist Security Info = False; User ID = hopeuperman; Password =Nothingreallymatters5616; MultipleActiveResultSets = False; Encrypt = True; TrustServerCertificate = False; Connection Timeout = 30;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AdminData>(entity =>
            {
                entity.HasKey(e => e.AdminId)
                    .HasName("PK__adminDat__AD0500A6DFA50520");

                entity.ToTable("adminData");

                entity.Property(e => e.AdminId).HasColumnName("adminId");

                entity.Property(e => e.AddedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("addedDate");

                entity.Property(e => e.AdminEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminEmail");

                entity.Property(e => e.AdminPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminPassword");

                entity.Property(e => e.AdminUsername)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminUsername");
            });

            modelBuilder.Entity<MapMarkers>(entity =>
            {
                entity.HasKey(e => e.MarkerId)
                    .HasName("PK__mapMarke__EB045FE862289C69");

                entity.ToTable("mapMarkers");

                entity.HasIndex(e => e.AdminId, "IX_mapMarkers_adminId");

                entity.Property(e => e.MarkerId).HasColumnName("markerId");

                entity.Property(e => e.AdminId).HasColumnName("adminId");

                entity.Property(e => e.AudioFile).HasColumnName("audioFile");

                entity.Property(e => e.Dialect)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dialect");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.MainLangauge)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mainLangauge");

                entity.Property(e => e.Tag)
                    .HasMaxLength(10)
                    .HasColumnName("tag")
                    .IsFixedLength();

                entity.HasOne(d => d.Admin)
                    .WithMany(p => p.MapMarkers)
                    .HasForeignKey(d => d.AdminId)
                    .HasConstraintName("FK_mapMarkers_ToTable");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}