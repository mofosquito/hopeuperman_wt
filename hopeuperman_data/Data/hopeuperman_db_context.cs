// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using hopeuperman_data.Models;

namespace hopeuperman_data.Data
{
    public partial class hopeuperman_db_context : DbContext
    {
        public hopeuperman_db_context()
        {
        }

        public hopeuperman_db_context(DbContextOptions<hopeuperman_db_context> options)
            : base(options)
        {
        }

        public virtual DbSet<AdminData> AdminData { get; set; }
        public virtual DbSet<MapMarkers> MapMarkers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=hopeuperman_db;Integrated Security=true");

            modelBuilder.Entity<AdminData>(entity =>
            {
                entity.HasKey(e => e.AdminId);

                entity.ToTable("adminData");

                entity.Property(e => e.AdminId)
                    .ValueGeneratedNever()
                    .HasColumnName("adminID");

                entity.Property(e => e.AdminEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminEmail");

                entity.Property(e => e.AdminPassword)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminPassword");

                entity.Property(e => e.AdminUsername)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminUsername");
            });

            modelBuilder.Entity<MapMarkers>(entity =>
            {
                entity.HasKey(e => e.MarkerId);

                entity.ToTable("mapMarkers");

                entity.Property(e => e.MarkerId).HasColumnName("markerID");

                entity.Property(e => e.AudioFile).HasColumnName("audioFile");

                entity.Property(e => e.Dialect)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dialect");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.MainLangauge)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mainLangauge");

                entity.Property(e => e.Tag)
                    .HasMaxLength(10)
                    .HasColumnName("tag")
                    .IsFixedLength();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}